{"version":3,"sources":["components/Form.jsx","components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","pushEntries","search","addSearch","useState","error","setError","pais","ciudad","handleChange","e","target","name","value","onSubmit","preventDefault","trim","className","id","onChange","type","placeholder","Weather","result","main","sys","weather","img","icon","country","src","alt","description","temp","temp_min","temp_max","App","push","addResult","useEffect","a","url","fetch","req","json","data","cod","console","log","conAPI","date","Date","getDay","getDate","getMonth","getFullYear","format","interval","ticking","Object","entries","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d6f9edd.chunk.js","sourcesContent":["import React ,{useState} from \"react\";\r\n\r\nconst Form = ({pushEntries, search, addSearch}) => {\r\n\r\n  \r\n  //useState error\r\n  const [error, setError] = useState(false)\r\n\r\n  //Deetructuring de search\r\n  const {pais, ciudad} = search;\r\n\r\n  //Cuando se ingresan valores a select e input\r\n  const handleChange = (e) => {\r\n    addSearch({ ...search, [e.target.name] : e.target.value })\r\n  }\r\n\r\n  //Cuando se presiona el boton submit\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    // console.log(pais.trim()) \r\n    // console.log(ciudad.trim())\r\n    if(pais.trim() === '' || ciudad.trim() === ''){\r\n\r\n      setError(true);\r\n      return;\r\n    }\r\n    setError(false);\r\n    pushEntries(true);\r\n\r\n  }\r\n\r\n  return (\r\n    <form\r\n    onSubmit={handleSubmit}\r\n    >\r\n      <div className=\"form\">\r\n      {\r\n          error\r\n          ? <p className=\"error\">Rellene los campos correctamente.</p>\r\n          :<p></p>\r\n        }\r\n        <select\r\n        name=\"pais\"\r\n        id=\"pais\"\r\n        value={pais}\r\n        onChange={handleChange}\r\n        >\r\n          <option> Seleccione un país</option>\r\n          <option value=\"MX\">México</option>\r\n          <option value=\"US\">Estados Unidos</option>\r\n          <option value=\"AR\">Argentina</option>\r\n          <option value=\"CO\">Colombia</option>\r\n          <option value=\"CR\">Costa Rica</option>\r\n          <option value=\"ES\">España</option>\r\n          <option value=\"PE\">Perú</option>\r\n        </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"ciudad\"\r\n          id=\"ciudad\"\r\n          placeholder=\"Ciudad / Estado\"\r\n          value={ciudad}\r\n          onChange={handleChange}\r\n        ></input>\r\n       \r\n      </div>\r\n      <div className=\"boton\">\r\n      <button\r\n      type=\"submit\"\r\n      >Buscar</button>\r\n      </div>\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Weather = ({result}) => {\r\n    let {name, main, sys, weather} = result;\r\n    // evita la ejecución si no encuentra name\r\n    if(!name) {\r\n        return null;\r\n      }\r\n    let img = `http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`\r\n    \r\n  \r\n    return ( \r\n        <div className=\"weather-background\">\r\n        <div className=\"weather-content\" >\r\n        <div className=\"title\">\r\n        <h1>{name}</h1>\r\n        <span>{sys.country}</span>\r\n        <img src={img} alt=\"icon\"></img>\r\n        </div>\r\n\r\n        <div className=\"temp\">\r\n        <p>- {weather[0].main} -</p>\r\n        <p>: {weather[0].description}</p>\r\n        <p className=\"tempe\">{main.temp} °C</p>\r\n        <span>{main.temp_min} °C  - {main.temp_max} °C </span>\r\n        </div>\r\n        </div>\r\n        \r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Weather;","import React, { Fragment, useEffect, useState } from \"react\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport Clock from 'react-live-clock';\nimport \"./App.css\";\n\nfunction App() {\n\n  let meses = [\n    \"Enero\",\n    \"Febrero\",\n    \"Marzo\",\n    \"Abril\",\n    \"Mayo\",\n    \"Junio\",\n    \"Julio\",\n    \"Agosto\",\n    \"Septiembre\",\n    \"Octubre\",\n    \"Noviembre\",\n    \"Diciembre\"\n  ]\n\n  let diasSemana = [\n    \"Domingo\",\n    \"Lunes\",\n    \"Martes\",\n    \"Miércoles\",\n    \"Jueves\",\n    \"Viernes\",\n    \"Sábado\"\n  ]\n\n  const [search, addSearch] = useState({\n    pais: \"\",\n    ciudad:\"\"\n  })\n\n  let {pais, ciudad} = search;\n\n  const [push, pushEntries] = useState(false);\n\n  const [result, addResult] = useState({});\n\n  // const [error, updateError] = useState(false);\n\n\n  useEffect ( () =>{\n\n    if (push){\n      const conAPI = async () =>{\n\n        const id = 'ef49f36d18b8e1fce8278986cdb61913'\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${id}&units=metric`\n  \n        const req = await fetch(url);\n        const data = await req.json();\n        if(data.cod){\n          addResult(data.cod);\n        }\n        addResult(data);\n        \n\n        console.log(data)\n        pushEntries(false);\n\n        \n\n\n      }\n  \n      conAPI();\n    }\n    \n\n  },[push]);\n\n\n  let date = new Date();\n\n  return (\n    <Fragment>\n      \n      \n\n      <div className=\"app-container\">\n      <div className=\"Welcome\">\n      <div className=\"box-welcome\">\n      <p>{diasSemana[date.getDay()] +\" \"+ date.getDate() + \" de \" \n      + meses[date.getMonth()] + \" de \" + date.getFullYear()}</p>\n\n      <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} />\n      </div>\n      \n      </div>\n        <div className=\"first-container\">\n          <div className=\"Header\">\n            <h1>Clima</h1>\n          </div>\n          <Form \n            search={search}\n            addSearch={addSearch}\n            push={push}\n            pushEntries={pushEntries}\n          />\n        </div>\n\n        <div className=\"second-container\">\n        {Object.entries(result).length === 0\n        ?<h3 className=\"empty\"> Introduzca una ubicación</h3>\n        :result.cod === \"404\"\n        ? <h3 className=\"empty2\">Ubicación no válida.</h3>\n        :<Weather\n            result={result}\n          />}\n          \n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}